version: '3.8'

services:
  # # دیتابیس PostgreSQL
  # db:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: construction_db
  #     POSTGRES_USER: construction_user
  #     POSTGRES_PASSWORD: construction_password_2024
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U construction_user -d construction_db"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # # Redis برای Cache
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # اپلیکیشن Django
  web:
    build: .
    command: >
      sh -c "python manage.py migrate --settings=construction_project.production_settings &&
             python manage.py collectstatic --noinput --settings=construction_project.production_settings &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 construction_project.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
      - database_volume:/app/database
      - backups_volume:/app/backups
    ports:
      - "8000:8000"
    environment:
      - DJANGO_ENVIRONMENT=production
      - SECRET_KEY=your-secret-key-change-in-production
    restart: unless-stopped

  # Nginx برای static files (اختیاری)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    restart: unless-stopped

volumes:
  # postgres_data:
  # redis_data:
  static_volume:
  media_volume:
  logs_volume:
  database_volume:
  backups_volume:
